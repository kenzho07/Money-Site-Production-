<?php

/**
 * @file
 * Contains hook implementations for the Cstmiepl Socialsso module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Sites\Settings;
/**
 * Implements hook_form_alter().
 */
function customiepl_socialsso_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
//    echo '<pre>';
//    print_r($form['google_settings']['advanced']);
//    echo '</pre>';
//    exit();

//    \Drupal::config('customiepl_socialsso.restrictdomain')
//        ->set('value1')
//        ->save();
    if ($form_id == 'user_form') {

    }
//    echo '<pre>';
//    $site_name = $this->config('cstmiepl_socialsso.restrictdomain')->get('name');
//    echo $site_name;
//    echo '</pre>';
//    exit();
//    if ($form_id == 'social_auth_google_settings') {
//        $form['google_settings']['advanced']['multi_restrict_domain'] = [
//            '#type' => 'textarea',
//            '#title' => t('Multi-domain Restrict'),
//            '#default_value' => $id = \Drupal::request()->query->get('multi_restrict_domain') ,
//        ];
//    }

  /*if (isset($form['type']) && $form['type']['#value'] . '_node_settings' == $form_id) {
    $upload_enabled_types = \Drupal::config('mymodule.settings')->get('upload_enabled_types');
    $form['workflow']['upload_' . $form['type']['#value']] = [
      '#type' => 'radios',
      '#title' => t('Attachments'),
      '#default_value' => in_array($form['type']['#value'], $upload_enabled_types) ? 1 : 0,
      '#options' => [t('Disabled'), t('Enabled')],
    ];
    // Add a custom submit handler to save the array of types back to the config file.
    $form['actions']['submit']['#submit'][] = 'mymodule_upload_enabled_types_submit';
  }*/
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function customiepl_socialsso_form_FORM_ID_alter(&$form, FormStateInterface $form_state, $form_id) {

  /*$form['terms_of_use'] = [
    '#type' => 'checkbox',
    '#title' => t("I agree with the website's terms and conditions."),
    '#required' => TRUE,
  ];*/

//  print_r($form);
//  exit();
}


/*function customiepl_socialsso_remove_textarea_help($form_element, FormStateInterface $form_state) {

    print_r($form_element);
    exit();
    if (isset($form_element[0]['format'])) {
        unset($form_element[0]['format']['guidelines']);
        unset($form_element[0]['format']['help']);
        unset($form_element[0]['format']['#type']);
        unset($form_element[0]['format']['#theme_wrappers']);
        $form_element[0]['format']['format']['#access'] = FALSE;
    }

    return $form_element;
}*/
